generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum BotType {
  openai
  cohere
}
enum ChatType {
  private
  group
}
enum MessageStatus {
  sent
  delivered
  read
}

model User {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  username String @unique
  password String?
  isBot Boolean @default(false)
  botType BotType?

  chats Chat[] @relation("UserChats")
  messages Message[] @relation("UserMessages")
  receipts MessageReceipt[]
}

model Chat {
  id String @id @default(uuid()) 
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  type ChatType @default(private)
  name String?

  messages Message[] @relation("ChatMessages")
  users User[] @relation("UserChats")
}

model Message {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt

  content String
  senderId String
  chatId String

  sender User @relation("UserMessages", fields: [senderId], references: [id])
  chat Chat @relation("ChatMessages", fields: [chatId], references: [id])
  receipts MessageReceipt[] 
}

model MessageReceipt {
  id String @id @default(uuid())
  timestamp DateTime @default(now())
  status MessageStatus
  userId String
  messageId String

  user User @relation(fields: [userId], references: [id])
  message Message @relation(fields: [messageId], references: [id])
  @@unique([messageId, userId])
}